name: lms-front-ci

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    name: Verify build (lint/test/build)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (clean)
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Test
        run: npm test --if-present -- --ci

      # Vite 프로덕션 빌드 (CI에서 한 번 검증용 빌드)
      - name: Build (Vite)
        env:
          VITE_API_BASE: /lms/api
          VITE_TINYMCE_API_KEY: ${{ secrets.TINYMCE_API_KEY }}  
          
        run: npm run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  docker:
    name: Build & Push image
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          REPO="${{ secrets.DOCKERHUB_USERNAME }}/mjsec-lms-front"
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            V="${GITHUB_REF_NAME#v}"
            echo "tags=${REPO}:${V},${REPO}:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${REPO}:edge" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |            # ← Dockerfile의 ARG와 동일한 이름으로 전달
            VITE_API_BASE=/lms/api
            VITE_TINYMCE_API_KEY=${{ secrets.TINYMCE_API_KEY }}
          cache-to: type=inline
